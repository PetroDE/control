#!/usr/bin/env python3

# PetroDE Control script
#   It does stuff(TM)
#
# A script to build Docker images, compile code, run tests, be friendly to
# developers, enable local development, check in build configuration next to
# code, kiss babies, and be popular.
#
# We really don't expect much of it. /s

import argparse
import docker
import json
import os
import sys

def err(arg):
    print('{PROG}: {}'.format(PROG), file=sys.stderr)

def print_formatted(line):
    if len(line) == 1:
        print(list(line.values())[0].strip())
        return
    if not 'progressDetail' in line.keys() or not line['progressDetail']:
        print('{}: {}'.format(line['id'], line['status']))
        return
    print('Unknown value: {}'.format(line))

parser = argparse.ArgumentParser(description='Control the building and running of images and containers')
parser.add_argument('-f', '--force', action='store_true', help='be forceful in all things')
parser.add_argument('-d', '--debug', action='store_true', help='print debug information helpful to developing the control script. This probably won\'t be useful to using the script, consider -v')
parser.add_argument('image', nargs='?', default='iojs-base:4', help='the name of the image to be built')
parser.add_argument('--no-cache', action='store_true', help='do not use the cache')
parser.add_argument('--no-rm', action='store_false', help='do not remove any images, even on success')
parser.add_argument('--no-pull', action='store_false', help='do not pull newer versions of the base image')
args = parser.parse_args()

if args.debug:
    print(args)

# docker.Client doesn't raise an exception. They just crash the program. This
# is the most graceful way I can save this.
if os.path.exists('/var/run/docker.sock'):
    docker = docker.Client(base_url='unix://var/run/docker.sock')
else:
    err('docker daemon not started')
    exit(2)


for line in (json.loads(l.decode('utf-8').strip()) for l in docker.build(path='.',
        tag=args.image,
        nocache=args.no_cache,
        rm=args.no_rm,
        pull=args.no_pull,
        dockerfile='Dockerfile')):
    print_formatted(line)

